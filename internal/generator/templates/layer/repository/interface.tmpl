package {{ .Tag }}

import (
    "{{ getRootFolderPath }}/internal/models"
    "{{ getRootFolderPath }}/internal/database/repositories/{{ .Tag }}/custom"
    "gorm.io/gorm"
    "context"
)

{{ $paths := index $.Data.Tags .Tag }}
type Repository interface {
    {{ range $paths -}}
        {{ range .Operations -}}
            //{{ if or (ne .Summary "") (ne .Description "") }} {{ upFirst .OperationId }} - Summary: {{ .Summary }}. Description: {{ .Description }} {{ end }}
            {{ upFirst .OperationId }}(
                ctx context.Context,
               {{- if .RequestBody }}
                    {{- $modelName := .RequestBody.Content.ModelName }}
                    {{ if .RequestBody.IsArray -}}
                        {{ lowFirst $modelName }}DTO []*models.{{ $modelName }}DTO, // {{ .Description }}
                    {{ else -}}
                        {{ lowFirst $modelName }}DTO *models.{{ $modelName }}DTO,
                    {{- end }}
               {{- end }}
               {{- range .Parameters -}}
                    {{ $type := convertToGoType .Type .Format }}
                    {{ .Name }} {{ if .IsArray }} []{{ $type }} {{ else }} {{ $type }} {{ end }}, // Required: {{ .Required }}, Description: {{ .Description }}
               {{- end }}
            ) {{ getResponse . }}
        {{ end -}}
    {{ end }}
}

func NewRepository(db *gorm.DB) *custom.RepositoryImpl {
    return custom.NewRepository(db)
}
